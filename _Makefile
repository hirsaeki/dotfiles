DOTPATH    := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
CANDIDATES := $(wildcard .??*) bin
#CANDIDATES := $(shell find $(DOTPATH) \( -type f -o -type l \) -path '*/.?*' -printf "%P\n") 
DIRS       := $(shell find $(DOTPATH) -maxdepth 1 -type d -path '*/.*' -printf "%P\n") $(shell find $(DOTPATH) -maxdepth 2 -type d -path '*/.local/*' -printf "%P\n")
CANDIDATES := $(shell find $(DOTPATH) -maxdepth 2 -path '*/.*/*' -printf "%P\n") $(shell find $(DOTPATH) -maxdepth 3 -path '*/.local/*' -printf "%P\n")
EXCLUSIONS := .DS_Store .git% .gitmodules .travis.yml .local
DOTFILES   := $(filter-out $(EXCLUSIONS), $(CANDIDATES))
DOTDIRS    := $(filter-out $(EXCLUSIONS), $(DIRS))
GITHUB     := https://github.com
APPIMAGES := z80oolong/tmux-eaw-appimage.tmux neovim/neovim.nvim
TERMINFO_DIRS := /lib/terminfo /etc/terminfo /usr/share/terminfo
dot-split = $(word $2,$(subst ., ,$1))

.DEFAULT_GOAL := help

.PHONY: all
all:

.PHONY: list
list: ## Show dot files in this repo
	@echo '==> dirs'
	@$(foreach val, $(DOTDIRS), /bin/ls -dF $(val);)
	@echo '==> files'
	@$(foreach val, $(DOTFILES), /bin/ls -dF $(val);)

.PHONY: deploy
deploy: ## Create symlink to home directory
	@echo '==> Start to deploy dotfiles to home directory.'
	@echo ''
	@echo '==> create directories if not present.'
	@echo ''
	$(foreach val, $(DOTDIRS), mkdir -p $(HOME)/$(val);)
	@echo '==> deploy dotfiles to home.'
	@echo ''
	$(foreach val, $(DOTFILES), ln -sfnv $(abspath $(val)) $(HOME)/$(val);)
	@echo '==> link terminfo dir to ~/.terminfo which has xterm-256color'
	@echo ''
	@$(foreach val, $(TERMINFO_DIRS), \
		[ $$(find $(val) -name "xterm-256color"|wc -l) -gt 0 ] && ln -sfn $(val) $(HOME)/.terminfo || : \
		;)

.PHONY: init
init: ## intialize environment
	@echo '==> install appimages from github'
	@echo ''
	@$(foreach val, $(APPIMAGES),\
		echo '==> install $(call dot-split,$(val),1)'; \
		target=$$(curl -sL $(GITHUB)/$(call dot-split,$(val),1)/releases/latest|grep -i "href.*\.appimage\""|sort|tail -n 1|sed 's:.*/\(.*/.*\.appimage\).*:\1:I') &&\
		echo $$target; \
		curl -sL $(GITHUB)/$(call dot-split,$(val),1)/releases/download/$$target -o .local/appimages/$$(basename $$target) &&\
		chmod +x .local/appimages/$$(basename $$target) &&\
		ln -sfn ../appimages/$$(basename $$target) .local/bin/$(call dot-split,$(val),2) ||\
		: ;)
	@echo '==> install fish'
	@echo ''
	@(cd .local/appimages &&\
		curl -sLO https://download.opensuse.org/repositories/shells:/fish:/nightly:/master/AppImage/fish-latest-x86_64.AppImage &&\
		chmod +x fish-latest-x86_64.AppImage &&\
		./fish-latest-x86_64.AppImage --appimage-extract &&\
		mv ./squashfs-root ./fish-root)
	@ln -sfn $(abspath .local/appimage/fish-root/AppRun) .local/bin/fish
	@echo '==> clone dircolors'
	@echo ''
	@test ! -d .dircolors && mkdir -p .dircolors && curl -sL https://github.com/seebi/dircolors-solarized/archive/master.tar.gz| tar -xzf - -C .dircolors --strip-component=1 --exclude='img' || : ;

.PHONY: clean
clean: ## Remove the dot files and this repo
	@echo 'Remove dot files in your home directory...'
	@$(foreach val, $(DOTFILES), rm -vrf $(HOME)/$(val);)
	@rm -rf $(DOTPATH)

.PHONY: help
help: ## Self-documented Makefile
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) \
		| sort \
		| awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
