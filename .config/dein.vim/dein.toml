[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo ='scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeShowHidden=1
  let g:NERDTreeIgnore=['\.pyc$', '__pycache__']
  nnoremap <silent><C-n> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  execute 'source ' . g:toml_dir . '/plugins/lightline.rc.vim'
'''

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = ['defx-git']
hook_add = '''
  execute 'source ' . g:toml_dir . '/plugins/defx.rc.vim'
'''

[[plugins]]
repo ='kristijanhusak/defx-git'
hook_add = '''
  execute 'source ' . g:toml_dir . '/plugins/defx-git.rc.vim'
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
  execute 'source ' . g:toml_dir . '/plugins/deol.rc.vim'
'''

[[plugins]]
repo ='lifepillar/vim-solarized8'

[[plugins]]
repo = 'vim-scripts/BufOnly.vim.git'

[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
let g:UltiSnipsUsePythonVersion = 3
let g:UltiSnipsExpandTrigger = "<C-u>"
let g:ulti_expand_or_jump_res = 0
let g:UltiSnipsEnableSnipMate = 1

function! ExpandSnippetOrReturn()
  let snippet = UltiSnips#ExpandSnippetOrJump()
  if g:ulti_expand_or_jump_res > 0
    return snippet
  else
    return "<CR>"
  endif
endfunction

inoremap <silent> <CR> pumvisible() ? "=ExpandSnippetOrReturn()" : "<CR>"
'''

[[plugins]]
repo ='Shougo/neosnippet-snippets'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'Shougo/neco-syntax'

